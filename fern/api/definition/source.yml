# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml
  pagination: pagination.yml

types:
  SourceId:
    docs: ID of the source
    alias: string

  Source:
    properties:
      id:
        docs: ID of the source
        type: SourceId
      team_id:
        docs: ID of the workspace
        type: commons.TeamId
      name:
        docs: Name for the source
        type: string
      archived_at:
        docs: Date the source was archived
        type: datetime
      updated_at:
        docs: Date the source was last updated
        type: datetime
      created_at:
        docs: Date the source was created
        type: datetime
      url:
        docs: |
          The source object contains a unique URL that 
          must be supplied to your webhook's provider. 
          Each valid HTTP POST request received at this URL creates an event.
        type: string

  AllSources:
    extends: pagination.Pagination
    properties:
      count: integer
      models: list<Source>

  CreateSourceRequest:
    properties:
      name:
        docs: A unique name for the source
        type: string

  UpsertSourceRequest:
    properties:
      name:
        docs: A unique name for the source
        type: string

  UpdateSourceRequest:
    properties:
      name:
        docs: A unique name for the source
        type: string

services:
  http:
    SourceService:
      docs: A source represents any third party that sends webhooks to Hookdeck.
      auth: true
      base-path: /sources
      endpoints:
        retrieveAllSources:
          docs: This endpoint lists all sources, or a subset of sources.
          method: GET
          path: /
          query-parameters:
            id: optional<SourceId>
            name: optional<string>
            archived: optional<boolean>
            archived_at: optional<datetime>
            limit:
              type: optional<integer>
              docs: Limit the returned source count (max 250)
          response: AllSources

        retrieveSource:
          docs: This endpoint retrieves a specific source.
          method: GET
          path: /{id}
          path-parameters:
            id:
              type: SourceId
              docs: Source ID
          response: Source

        createSource:
          docs: This endpoint creates a source.
          method: POST
          path: /
          request: CreateSourceRequest
          response: Source

        upsertSource:
          docs: This endpoint creates a source, or updates an existing source by name.
          method: PUT
          path: /
          request: UpsertSourceRequest
          response: Source

        updateSource:
          docs: This endpoint updates a source.
          method: PUT
          path: /{id}
          path-parameters:
            id: SourceId
          request: UpdateSourceRequest
          response: Source

        archiveSource:
          docs: |
            This endpoint archives a source and any associated connections. 
            The parameter archived_at is set to the current timestamp.
          method: PUT
          path: /{id}/archive
          path-parameters:
            id: SourceId
          response: Source

        unarchiveSource:
          docs: |
            This endpoint unarchives a source. 
            The parameter archived_at is set to null.
          method: PUT
          path: /{id}/archive
          path-parameters:
            id: SourceId
          response: Source
