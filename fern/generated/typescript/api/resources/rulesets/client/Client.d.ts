/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import { HookdeckApi } from "../../../..";
export declare namespace Client {
    interface Options {
        environment: environments.HookdeckApiEnvironment | string;
    }
}
export declare class Client {
    private readonly options;
    constructor(options: Client.Options);
    /**
     *
     */
    getRulesets(request?: HookdeckApi.GetRulesetsRequest): Promise<HookdeckApi.RulesetPaginatedResult>;
    /**
     *
     */
    upsertRuleset(request: HookdeckApi.UpsertRulesetRequest): Promise<HookdeckApi.Ruleset>;
    /**
     *
     */
    createRuleset(request: HookdeckApi.CreateRulesetRequest): Promise<HookdeckApi.Ruleset>;
    /**
     *
     */
    getRuleset(id: string): Promise<HookdeckApi.Ruleset>;
    /**
     *
     */
    updateRuleset(id: string, request?: HookdeckApi.UpdateRulesetRequest): Promise<HookdeckApi.Ruleset>;
    /**
     *
     */
    archiveRuleset(id: string): Promise<HookdeckApi.Ruleset>;
    /**
     *
     */
    unarchiveRuleset(id: string): Promise<HookdeckApi.Ruleset>;
}
