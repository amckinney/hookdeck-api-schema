/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import { HookdeckApi } from "../../../..";
export declare namespace Client {
    interface Options {
        environment: environments.HookdeckApiEnvironment | string;
    }
}
export declare class Client {
    private readonly options;
    constructor(options: Client.Options);
    /**
     *
     */
    getIssueTriggers(request?: HookdeckApi.GetIssueTriggersRequest): Promise<HookdeckApi.IssueTriggerPaginatedResult>;
    /**
     *
     */
    upsertIssueTrigger(request: HookdeckApi.UpsertIssueTriggerRequest): Promise<HookdeckApi.IssueTrigger>;
    /**
     *
     */
    createIssueTrigger(request: HookdeckApi.CreateIssueTriggerRequest): Promise<HookdeckApi.IssueTrigger>;
    /**
     *
     */
    getIssueTrigger(id: string): Promise<HookdeckApi.IssueTrigger>;
    /**
     *
     */
    updateIssueTrigger(id: string, request?: HookdeckApi.UpdateIssueTriggerRequest): Promise<HookdeckApi.IssueTrigger>;
    /**
     *
     */
    deleteIssueTrigger(id: string): Promise<HookdeckApi.DeletedIssueTriggerResponse>;
    /**
     *
     */
    disableIssueTrigger(id: string): Promise<HookdeckApi.IssueTrigger>;
    /**
     *
     */
    enableIssueTrigger(id: string): Promise<HookdeckApi.IssueTrigger>;
}
