/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import { HookdeckApi } from "../../../..";
export declare namespace Client {
    interface Options {
        environment: environments.HookdeckApiEnvironment | string;
    }
}
export declare class Client {
    private readonly options;
    constructor(options: Client.Options);
    /**
     *
     */
    getDestinations(request?: HookdeckApi.GetDestinationsRequest): Promise<HookdeckApi.DestinationPaginatedResult>;
    /**
     *
     */
    upsertDestination(request: HookdeckApi.UpsertDestinationRequest): Promise<HookdeckApi.Destination>;
    /**
     *
     */
    createDestination(request: HookdeckApi.CreateDestinationRequest): Promise<HookdeckApi.Destination>;
    /**
     *
     */
    getDestination(id: string): Promise<HookdeckApi.Destination>;
    /**
     *
     */
    updateDestination(id: string, request?: HookdeckApi.UpdateDestinationRequest): Promise<HookdeckApi.Destination>;
    /**
     *
     */
    archiveDestination(id: string): Promise<HookdeckApi.Destination>;
    /**
     *
     */
    unarchiveDestination(id: string): Promise<HookdeckApi.Destination>;
}
