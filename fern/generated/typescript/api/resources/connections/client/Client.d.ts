/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import { HookdeckApi } from "../../../..";
export declare namespace Client {
    interface Options {
        environment: environments.HookdeckApiEnvironment | string;
    }
}
export declare class Client {
    private readonly options;
    constructor(options: Client.Options);
    /**
     *
     */
    getConnections(request?: HookdeckApi.GetConnectionsRequest): Promise<HookdeckApi.ConnectionPaginatedResult>;
    /**
     *
     */
    upsertConnection(request: HookdeckApi.UpsertConnectionRequest): Promise<HookdeckApi.Connection>;
    /**
     *
     */
    createConnection(request: HookdeckApi.CreateConnectionRequest): Promise<HookdeckApi.Connection>;
    /**
     *
     */
    getConnection(id: string): Promise<HookdeckApi.Connection>;
    /**
     *
     */
    updateConnection(id: string, request?: HookdeckApi.UpdateConnectionRequest): Promise<HookdeckApi.Connection>;
    /**
     *
     */
    archiveConnection(id: string): Promise<HookdeckApi.Connection>;
    /**
     *
     */
    unarchiveConnection(id: string): Promise<HookdeckApi.Connection>;
    /**
     *
     */
    pauseConnection(id: string): Promise<HookdeckApi.Connection>;
    /**
     *
     */
    unpauseConnection(id: string): Promise<HookdeckApi.Connection>;
}
