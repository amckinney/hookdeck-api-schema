"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.HookdeckApiClient = void 0;
const Client_1 = require("./api/resources/issueTriggers/client/Client");
const Client_2 = require("./api/resources/attempts/client/Client");
const Client_3 = require("./api/resources/bookmarks/client/Client");
const Client_4 = require("./api/resources/destinations/client/Client");
const Client_5 = require("./api/resources/events/client/Client");
const Client_6 = require("./api/resources/bulkRetryEvents/client/Client");
const Client_7 = require("./api/resources/bulkRetryIgnoredEvents/client/Client");
const Client_8 = require("./api/resources/integrations/client/Client");
const Client_9 = require("./api/resources/issues/client/Client");
const Client_10 = require("./api/resources/requests/client/Client");
const Client_11 = require("./api/resources/bulkRetryRequests/client/Client");
const Client_12 = require("./api/resources/rulesets/client/Client");
const Client_13 = require("./api/resources/sources/client/Client");
const Client_14 = require("./api/resources/notifications/client/Client");
const Client_15 = require("./api/resources/transformations/client/Client");
const Client_16 = require("./api/resources/connections/client/Client");
class HookdeckApiClient {
    options;
    constructor(options) {
        this.options = options;
    }
    #issueTriggers;
    get issueTriggers() {
        return (this.#issueTriggers ??= new Client_1.Client(this.options));
    }
    #attempts;
    get attempts() {
        return (this.#attempts ??= new Client_2.Client(this.options));
    }
    #bookmarks;
    get bookmarks() {
        return (this.#bookmarks ??= new Client_3.Client(this.options));
    }
    #destinations;
    get destinations() {
        return (this.#destinations ??= new Client_4.Client(this.options));
    }
    #events;
    get events() {
        return (this.#events ??= new Client_5.Client(this.options));
    }
    #bulkRetryEvents;
    get bulkRetryEvents() {
        return (this.#bulkRetryEvents ??= new Client_6.Client(this.options));
    }
    #bulkRetryIgnoredEvents;
    get bulkRetryIgnoredEvents() {
        return (this.#bulkRetryIgnoredEvents ??= new Client_7.Client(this.options));
    }
    #integrations;
    get integrations() {
        return (this.#integrations ??= new Client_8.Client(this.options));
    }
    #issues;
    get issues() {
        return (this.#issues ??= new Client_9.Client(this.options));
    }
    #requests;
    get requests() {
        return (this.#requests ??= new Client_10.Client(this.options));
    }
    #bulkRetryRequests;
    get bulkRetryRequests() {
        return (this.#bulkRetryRequests ??= new Client_11.Client(this.options));
    }
    #rulesets;
    get rulesets() {
        return (this.#rulesets ??= new Client_12.Client(this.options));
    }
    #sources;
    get sources() {
        return (this.#sources ??= new Client_13.Client(this.options));
    }
    #notifications;
    get notifications() {
        return (this.#notifications ??= new Client_14.Client(this.options));
    }
    #transformations;
    get transformations() {
        return (this.#transformations ??= new Client_15.Client(this.options));
    }
    #connections;
    get connections() {
        return (this.#connections ??= new Client_16.Client(this.options));
    }
}
exports.HookdeckApiClient = HookdeckApiClient;
